return(data)
}
#********************************************************************************************************
# Remove the '#' before the following line to create a data file called "categories" with value labels.
#categories <- vallabels(new_data)
# Remove the '#' before the following lines to rename variables using Qnames instead of Reference Numbers
#new_data <- qnames(new_data)
df_data <- qnames(vallabels(new_data))
# Produce summaries for the raw (uncategorized) data file
summary(df_data)
# Remove the '#' before the following lines to produce summaries for the "categories" data file.
#categories <- vallabels(new_data)
#summary(categories)
#************************************************************************************************************
# Set working directory
# setwd()
new_data <- read.table('data/noninterview_var/noninterview_var.dat', sep=' ')
names(new_data) <- c('R0000100',
'T8218500')
# Handle missing values
new_data[new_data == -1] = NA  # Refused
new_data[new_data == -2] = NA  # Dont know
new_data[new_data == -3] = NA  # Invalid missing
new_data[new_data == -4] = NA  # Valid missing
new_data[new_data == -5] = NA  # Non-interview
# If there are values not categorized they will be represented as NA
vallabels = function(data) {
data$T8218500 <- factor(data$T8218500,
levels=c(60.0,61.0,62.0,63.0,64.0,65.0,66.0,67.0,68.0,69.0,70.0,71.0,72.0,73.0,74.0,75.0,76.0,77.0),
labels=c("60: 60  PARENT REFUSAL/BREAKOFF",
"61: 61  YOUTH REFUSAL/BREAKOFF",
"62: 62  PARENT & YOUTH REFUSAL/BREAKOFF",
"63: 63  UNABLE TO LOCATE FAMILY UNIT & YOUTH",
"64: 64  UNABLE TO LOCATE YOUTH",
"65: 65  DECEASED",
"66: 66  OTHER",
"67: 67  DO NOT REFIELD (VERY DIFFICULT CASE)",
"68: 68  MILITARY SAMPLE DROPPED",
"69: 69  SUPPLEMENTAL MALE POOR WHITE SAMPLE DROPPED",
"70: 70  SUPPLEMENTAL FEMALE POOR WHITE SAMPLE DROPPED",
"71: 71  YOUTH REFUSAL - VERY DIFFICULT CASE",
"72: 72  NOT FIELDED IN CURRENT SURVEY YEAR - VERY DIFFICULT CASE",
"73: 73  NOT INTERVIEWED - INCARCERATED",
"74: 74  NOT INTERVIEWED - IN MILITARY",
"75: 75  DECEASED - MEMBER OF DROPPED SPECIAL SAMPLE",
"76: 76  UNAVAILABLE DURING FIELD PERIOD",
"77: 77  REFUSAL - BY AVOIDANCE"))
return(data)
}
varlabels <- c("ID# (1-12686) 79",
"REASONS FOR NON-INT 2018"
)
# Use qnames rather than rnums
qnames = function(data) {
names(data) <- c("CASEID_1979",
"RNI_2018")
return(data)
}
#********************************************************************************************************
# Remove the '#' before the following line to create a data file called "categories" with value labels.
#categories <- vallabels(new_data)
# Remove the '#' before the following lines to rename variables using Qnames instead of Reference Numbers
#new_data <- qnames(new_data)
#categories <- qnames(categories)
df_data_rni <- qnames(vallabels(new_data))
# Produce summaries for the raw (uncategorized) data file
summary(df_data_rni)
df_data$REASON_NONINT <- df_data_rni$RNI_2018
summary(df_data)
# Remove the '#' before the following lines to produce summaries for the "categories" data file.
#categories <- vallabels(new_data)
#summary(categories)
#************************************************************************************************************
df_data$RNI_2018 <-df_data_rni$RNI_2018
df_rni_groupings <- df_data %>%
mutate(mil_groups = case_when(RNI_2018 == "68: 68  MILITARY SAMPLE DROPPED" ~ "MIL_DROP",
SAMPLE_ID_79 == "MIL MALE WHITE" ~ "OG_MIL",
SAMPLE_ID_79 == "MIL MALE BLACK" ~ "OG_MIL",
SAMPLE_ID_79 == "MIL MALE HISPANIC" ~ "OG_MIL",
SAMPLE_ID_79 == "MIL FEMALE WHITE"~ "OG_MIL",
SAMPLE_ID_79 == "MIL FEMALE BLACK"~ "OG_MIL",
SAMPLE_ID_79 == "MIL FEMALE HISPANIC"~ "OG_MIL",
SAMPLE_ID_79 == "CROSS MALE WHITE" ~ "NON_MIL",
SAMPLE_ID_79 == "CROSS MALE WH POOR" ~ "NON_MIL",
SAMPLE_ID_79 == "CROSS MALE BLACK" ~ "NON_MIL",
SAMPLE_ID_79 == "CROSS MALE HISPANIC" ~ "NON_MIL",
SAMPLE_ID_79 == "CROSS FEMALE WHITE" ~ "NON_MIL",
SAMPLE_ID_79 == "CROSS FEMALE WH POOR" ~ "NON_MIL",
SAMPLE_ID_79 == "CROSS FEMALE BLACK" ~ "NON_MIL",
SAMPLE_ID_79 == "CROSS FEMALE HISPANIC" ~ "NON_MIL",
SAMPLE_ID_79 == "SUP MALE WH POOR" ~ "NON_MIL",
SAMPLE_ID_79 == "SUP MALE BLACK" ~ "NON_MIL",
SAMPLE_ID_79 == "SUP MALE HISPANIC" ~ "NON_MIL",
SAMPLE_ID_79 == "SUP FEMALE WH POOR" ~ "NON_MIL",
SAMPLE_ID_79 == "SUP FEMALE BLACK" ~ "NON_MIL",
SAMPLE_ID_79 == "SUP FEMALE HISPANIC" ~ "NON_MIL"))
new_data <- read.table('data/bgadep/good.dat', sep=' ')
names(new_data) <- c('R0000100',
'R0000500',
'R0173600',
'R0214700',
'R0214800',
'R1021800',
'R1022000',
'R1022100',
'R3896810',
'T3044200',
'T3044300',
'T5616100',
'T5616200')
# Handle missing values
new_data[new_data == -1] = NA  # Refused
new_data[new_data == -2] = NA  # Dont know
new_data[new_data == -3] = NA  # Invalid missing
new_data[new_data == -4] = NA  # Valid missing
new_data[new_data == -5] = NA  # Non-interview
# If there are values not categorized they will be represented as NA
vallabels = function(data) {
data$R0173600 <- factor(data$R0173600,
levels=c(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0,15.0,16.0,17.0,18.0,19.0,20.0),
labels=c("CROSS MALE WHITE",
"CROSS MALE WH. POOR",
"CROSS MALE BLACK",
"CROSS MALE HISPANIC",
"CROSS FEMALE WHITE",
"CROSS FEMALE WH POOR",
"CROSS FEMALE BLACK",
"CROSS FEMALE HISPANIC",
"SUP MALE WH POOR",
"SUP MALE BLACK",
"SUP MALE HISPANIC",
"SUP FEM WH POOR",
"SUP FEMALE BLACK",
"SUP FEMALE HISPANIC",
"MIL MALE WHITE",
"MIL MALE BLACK",
"MIL MALE HISPANIC",
"MIL FEMALE WHITE",
"MIL FEMALE BLACK",
"MIL FEMALE HISPANIC"))
data$R0214700 <- factor(data$R0214700,
levels=c(1.0,2.0,3.0),
labels=c("HISPANIC",
"BLACK",
"NON-BLACK, NON-HISPANIC"))
data$R0214800 <- factor(data$R0214800,
levels=c(1.0,2.0),
labels=c("MALE",
"FEMALE"))
data$R1021800[0.0 <= data$R1021800 & data$R1021800 <= 9.0] <- 0.0
data$R1021800[26.0 <= data$R1021800 & data$R1021800 <= 99999.0] <- 26.0
data$R1021800 <- factor(data$R1021800,
levels=c(0.0,10.0,11.0,12.0,13.0,14.0,15.0,16.0,17.0,18.0,19.0,20.0,21.0,22.0,23.0,24.0,25.0,26.0),
labels=c("0 TO 9: < 10",
"10",
"11",
"12",
"13",
"14",
"15",
"16",
"17",
"18",
"19",
"20",
"21",
"22",
"23",
"24",
"25",
"26 TO 99999: 26+"))
data$R1022000 <- factor(data$R1022000,
levels=c(0.0,1.0,2.0,3.0,4.0,5.0,6.0),
labels=c("NEVER",
"ONCE",
"2 OR 3 TIMES",
"4 OR 5 TIMES",
"6 OR 7 TIMES",
"8 OR 9 TIMES",
"10 OR MORE TIMES"))
data$R1022100[16.0 <= data$R1022100 & data$R1022100 <= 99999.0] <- 16.0
data$R1022100 <- factor(data$R1022100,
levels=c(0.0,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0,15.0,16.0),
labels=c("0",
"1",
"2",
"3",
"4",
"5",
"6",
"7",
"8",
"9",
"10",
"11",
"12",
"13",
"14",
"15",
"16 TO 99999: 16+"))
data$R3896810[1.0 <= data$R3896810 & data$R3896810 <= 9.0] <- 1.0
data$R3896810[10.0 <= data$R3896810 & data$R3896810 <= 19.0] <- 10.0
data$R3896810[20.0 <= data$R3896810 & data$R3896810 <= 29.0] <- 20.0
data$R3896810[30.0 <= data$R3896810 & data$R3896810 <= 39.0] <- 30.0
data$R3896810[40.0 <= data$R3896810 & data$R3896810 <= 49.0] <- 40.0
data$R3896810[50.0 <= data$R3896810 & data$R3896810 <= 59.0] <- 50.0
data$R3896810[60.0 <= data$R3896810 & data$R3896810 <= 69.0] <- 60.0
data$R3896810 <- factor(data$R3896810,
levels=c(0.0,1.0,10.0,20.0,30.0,40.0,50.0,60.0),
labels=c("0",
"1 TO 9",
"10 TO 19",
"20 TO 29",
"30 TO 39",
"40 TO 49",
"50 TO 59",
"60 TO 69"))
data$T3044200[10.0 <= data$T3044200 & data$T3044200 <= 999.0] <- 10.0
data$T3044200 <- factor(data$T3044200,
levels=c(0.0,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0),
labels=c("0",
"1",
"2",
"3",
"4",
"5",
"6",
"7",
"8",
"9",
"10 TO 999: 10+"))
data$T3044300 <- factor(data$T3044300,
levels=c(0.0,1.0,2.0,3.0,4.0,5.0),
labels=c("Never in the last 30 days",
"Less often than once a week",
"1 or 2 times per week",
"3 or 4 times per week",
"5 or 6 times per week",
"Everyday"))
# data$T5616100 <- factor(data$T5616100,
#   levels=c(0.0,1.0),
#   labels=c("No",
#     "Yes"))
# data$T5616200 <- factor(data$T5616200,
#   levels=c(0.0,1.0),
#   labels=c("No",
#     "Yes"))
return(data)
}
varlabels <- c("ID# (1-12686) 79",
"DATE OF BIRTH - YR 79",
"SAMPLE ID  79 INT",
"RACL/ETHNIC COHORT /SCRNR 79",
"SEX OF R 79",
"ALCHL-AGE START DRNK 1 TIME WK 83",
"ALCHL-FREQ 6/> DRNK @ 1 TM LAST MO 83",
"ALCHL-#DAYS DRANK ALCOHOL LAST MO 83",
"20-ITEM CES-D SCORE 92",
"# OF DRINKS R HAS ON AVERAGE DAY 2010",
"FREQ OF 6 OR MORE DRINKS AT ONCE IN LAST 30 DAYS 2010",
"LIVE W ONE DEPRESSED MENTALLY ILL SUICIDAL <18 2016",
"LIVE W PROBLEM DRINKER OR ALCHOLIC <18 2016"
)
# Use qnames rather than rnums
qnames = function(data) {
names(data) <- c("MCASEID",
"YoB",
"SAMPLEID",
"RACE",
"SEX",
"DRINKSTART_1983",
"DRINKFREQ6_1983",
"DRINKFREQ_1983",
"CESD_1992",
"DRINKAVERAGE_2010",
"DRINKFREQ6_2010",
"HOMEDEP_2016",
"HOMEDRINKER_2016")
return(data)
}
#********************************************************************************************************
# sneakiness to work with factors
df_data_good <- qnames(new_data)
df_data_goodx <- qnames(vallabels(new_data))
df_data_good[c("MCASEID","YoB","SAMPLEID","RACE","SEX") ]<-df_data_goodx[c("MCASEID","YoB","SAMPLEID","RACE","SEX") ]
rm(df_data_goodx)
# live with
new_data <- read.table('data/bgadep/livewith.dat', sep=' ')
names(new_data) <- c('R0000100',
'R0173600',
'R0214700',
'R0214800',
'T3974100',
'T3974200',
'T4912400',
'T4912500',
'T5616100',
'T5616200')
# Handle missing values
new_data[new_data == -1] = NA  # Refused
new_data[new_data == -2] = NA  # Dont know
new_data[new_data == -3] = NA  # Invalid missing
new_data[new_data == -4] = NA  # Valid missing
new_data[new_data == -5] = NA  # Non-interview
# If there are values not categorized they will be represented as NA
vallabels = function(data) {
data$R0173600 <- factor(data$R0173600,
levels=c(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0,15.0,16.0,17.0,18.0,19.0,20.0),
labels=c("CROSS MALE WHITE",
"CROSS MALE WH. POOR",
"CROSS MALE BLACK",
"CROSS MALE HISPANIC",
"CROSS FEMALE WHITE",
"CROSS FEMALE WH POOR",
"CROSS FEMALE BLACK",
"CROSS FEMALE HISPANIC",
"SUP MALE WH POOR",
"SUP MALE BLACK",
"SUP MALE HISPANIC",
"SUP FEM WH POOR",
"SUP FEMALE BLACK",
"SUP FEMALE HISPANIC",
"MIL MALE WHITE",
"MIL MALE BLACK",
"MIL MALE HISPANIC",
"MIL FEMALE WHITE",
"MIL FEMALE BLACK",
"MIL FEMALE HISPANIC"))
data$R0214700 <- factor(data$R0214700,
levels=c(1.0,2.0,3.0),
labels=c("HISPANIC",
"BLACK",
"NON-BLACK, NON-HISPANIC"))
data$R0214800 <- factor(data$R0214800,
levels=c(1.0,2.0),
labels=c("MALE",
"FEMALE"))
# data$T3974100 <- factor(data$T3974100,
#   levels=c(0.0,1.0),
#   labels=c("No",
#     "Yes"))
# data$T3974200 <- factor(data$T3974200,
#   levels=c(0.0,1.0),
#   labels=c("No",
#     "Yes"))
# data$T4912400 <- factor(data$T4912400,
#   levels=c(0.0,1.0),
#   labels=c("No",
#     "Yes"))
# data$T4912500 <- factor(data$T4912500,
#   levels=c(0.0,1.0),
#   labels=c("No",
#     "Yes"))
# data$T5616100 <- factor(data$T5616100,
#   levels=c(0.0,1.0),
#   labels=c("No",
#     "Yes"))
# data$T5616200 <- factor(data$T5616200,
#   levels=c(0.0,1.0),
#   labels=c("No",
#     "Yes"))
return(data)
}
varlabels <- c("ID# (1-12686) 79",
"SAMPLE ID  79 INT",
"RACL/ETHNIC COHORT /SCRNR 79",
"SEX OF R 79",
"LIVE W ONE DEPRESSED MENTALLY ILL SUICIDAL <18 2012",
"LIVE W PROBLEM DRINKER OR ALCHOLIC <18 2012",
"LIVE W ONE DEPRESSED MENTALLY ILL SUICIDAL <18 2014",
"LIVE W PROBLEM DRINKER OR ALCHOLIC <18 2014",
"LIVE W ONE DEPRESSED MENTALLY ILL SUICIDAL <18 2016",
"LIVE W PROBLEM DRINKER OR ALCHOLIC <18 2016"
)
# Use qnames rather than rnums
qnames = function(data) {
names(data) <- c("MCASEID",
"SAMPLEID",
"RAC",
"SEX",
"HOMEDEP_2012",
"HOMEDRINKER_2012",
"HOMEDEP_2014",
"HOMEDRINKER_2014",
"HOMEDEP_2016",
"HOMEDRINKER_2016")
return(data)
}
df_data_home <- qnames(vallabels(new_data))
df_data_raw=merge(df_data_good,df_data_home)
summary(df_data_raw)
#Creat Subject Tag
df_full_gen1 = df_data_raw %>%
mutate(SubjectTag=MCASEID*100,
CASEID=MCASEID*100,
HOMEDRINKER=pmax(HOMEDRINKER_2016,HOMEDRINKER_2014,HOMEDRINKER_2012, na.rm = TRUE),
HOMEDEP=pmax(HOMEDEP_2016,HOMEDEP_2014,HOMEDEP_2012, na.rm = TRUE)
)
#Change Reference Group for Race (to non-black-non-hispanic)
df_full_gen1 $RACE = relevel(df_full_gen1$RACE, ref=3)
# name = lm([target_variable] ~ [predictor_var1 + predictor_var2 + ...], data = [data_source])
#to add linear regression line to plot use abline()
trial = lm(NUM_DAY_DRANK_LAST_MONTH_83 ~ as.factor(mil_groups), data = df_rni_groupings)
summary(trial)
options(digits = 3)
days_per_month_83_controlled = lm(NUM_DAY_DRANK_LAST_MONTH_83 ~ as.factor(mil_groups) + SAMPLE_SEX_79, data = df_rni_groupings)
summary(days_per_month_83_controlled)
days_per_month_83_controlled = lm(NUM_DAY_DRANK_LAST_MONTH_83 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(days_per_month_83_controlled)
days_per_month_83_controls = lm(NUM_DAY_DRANK_LAST_MONTH_83 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(days_per_month_83_controls)
age_start_82 = lm(AGE_START_DRINK_82 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(age_start_82)
freq_6_82 = lm(ALC_FREQ6DRINKS_82 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(freq_6_82)
freq_6_82 = lm(as.factor(ALC_FREQ6DRINKS_82) ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(freq_6_82)
impact_job_82 = lm(ALC_IMPACT_JOB_82 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(impact_job_82)
impact_job_noalc_last30_84 = lm(ALC_IMPACT_JOB_NOALC_LAST30_84 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(impact_job_noalc_last30_84)
afraid_alc_84 = lm(AFRAID_ALCOHOLIC_84 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(afraid_alc_84)
drink_til_drunk_84 = lm(DRINK_UNTIL_DRUNK_84 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(drink_til_drunk_84)
forget_next_84 = lm(FORGETS_NEXT_DAY_84 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(forget_next_84)
AM_drink_first_84 = lm(DRINK_FIRST_MORNING_84 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(AM_drink_first_84)
AM_drink_first_84 = lm(as.factor(DRINK_FIRST_MORNING_84) ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(AM_drink_first_84)
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_82 = case_when(ALC_FREQ6DRINKS_82 == "NEVER" ~ 0,
ALC_FREQ6DRINKS_82 == "ONCE" ~ 1,
ALC_FREQ6DRINKS_82 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINKS_82 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINKS_82 == "10 OR MORE TIMES" ~ 4))
options(digits = 3)
library(dplyr)
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_82 = case_when(ALC_FREQ6DRINKS_82 == "NEVER" ~ 0,
ALC_FREQ6DRINKS_82 == "ONCE" ~ 1,
ALC_FREQ6DRINKS_82 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINKS_82 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINKS_82 == "10 OR MORE TIMES" ~ 4))
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_82 = case_when(ALC_FREQ6DRINKS_82 == "NEVER" ~ 0,
ALC_FREQ6DRINKS_82 == "ONCE" ~ 1,
ALC_FREQ6DRINKS_82 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINKS_82 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINKS_82 == "10 OR MORE TIMES" ~ 4))
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_83 = case_when(ALC_FREQ6DRINKS_83 == "NEVER" ~ 0,
ALC_FREQ6DRINKS_82 == "ONCE" ~ 1,
ALC_FREQ6DRINKS_82 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINKS_82 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINKS_82 == "10 OR MORE TIMES" ~ 4))
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_82 = case_when(ALC_FREQ6DRINKS_82 == "NEVER" ~ 0,
ALC_FREQ6DRINKS_82 == "ONCE" ~ 1,
ALC_FREQ6DRINKS_82 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINKS_82 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINKS_82 == "10 OR MORE TIMES" ~ 4))
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_83 = case_when(ALC_FREQ6DRINK_83 == "NEVER" ~ 0,
ALC_FREQ6DRINKS_82 == "ONCE" ~ 1,
ALC_FREQ6DRINKS_82 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINKS_82 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINKS_82 == "10 OR MORE TIMES" ~ 4))
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_82 = case_when(ALC_FREQ6DRINKS_82 == "NEVER" ~ 0,
ALC_FREQ6DRINKS_82 == "ONCE" ~ 1,
ALC_FREQ6DRINKS_82 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINKS_82 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINKS_82 == "10 OR MORE TIMES" ~ 4))
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_83 = case_when(ALC_FREQ6DRINK_83 == "NEVER" ~ 0,
ALC_FREQ6DRINK_83 == "ONCE" ~ 1,
ALC_FREQ6DRINK_83 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINK_83 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINK_83 == "10 OR MORE TIMES" ~ 4))
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_84 = case_when(ALC_FREQ6DRINK_84 == "NEVER" ~ 0,
ALC_FREQ6DRINK_84 == "ONCE" ~ 1,
ALC_FREQ6DRINK_84 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINK_84 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINK_84 == "10 OR MORE TIMES" ~ 4))
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_82 = case_when(ALC_FREQ6DRINKS_82 == "NEVER" ~ 0,
ALC_FREQ6DRINKS_82 == "ONCE" ~ 1,
ALC_FREQ6DRINKS_82 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINKS_82 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINKS_82 == "10 OR MORE TIMES" ~ 4))
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_83 = case_when(ALC_FREQ6DRINK_83 == "NEVER" ~ 0,
ALC_FREQ6DRINK_83 == "ONCE" ~ 1,
ALC_FREQ6DRINK_83 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINK_83 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINK_83 == "10 OR MORE TIMES" ~ 4))
df_rni_groupings <- df_rni_groupings %>%
mutate(recode_alc_freq6drinks_84 = case_when(ALC_FREQ6DRINK_84 == "NEVER" ~ 0,
ALC_FREQ6DRINK_84 == "ONCE" ~ 1,
ALC_FREQ6DRINK_84 == "2 OR 3 TIMES" ~ 2,
ALC_FREQ6DRINK_84 == "4 OR 5 TIMES" ~ 3,
ALC_FREQ6DRINK_84 == "10 OR MORE TIMES" ~ 4))
freq_6_82 = lm(recode_alc_freq6drinks_82 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(freq_6_82)
# need to code alc_freq6 to be numerical and not categorical
freq_6_83 = lm(recode_alc_freq6drinks_83 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(freq_6_83)
freq_6_84 = lm(recode_alc_freq6drinks_84 ~ as.factor(mil_groups) + SAMPLE_SEX_79 + RACE, data = df_rni_groupings)
summary(freq_6_84)
